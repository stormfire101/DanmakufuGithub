#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["spell1"]
#Text["spell1"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"
let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let pos = ObjPrim_Create(OBJ_SPRITE_2D());
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(4500);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}//To do add a curved laser to the spirit that follows the player
//will make it look more like a spirit and stop the player from circling it constantly be aware of the fact that cuverd lasers eat up the cpu
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
      wait(120);
	  Stellar_Init();
	  spirit;
	  coin;
	  //coinburst;
	  //scytheSt;
   // movement;
 
}
task coin{
	let hold=0;
	let amount = 5;
	let num = 12;
	let sec = 2.5;
	loop{
		loop(5){
			ascent(o in 0..amount){
				ascent(i in 0..360/num){
					CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),1,i*(360/num)+o*(360/num/sec)+hold,0,1,DS_COIN_YELLOW,10);
				}
				wait(20);
			}
			hold+=20;
		}
		coinburst;
		wait(100);
	}
}
task coinburst{
	let hold =360;
	let num =12;
	let amount=9;
	let sec= 4;
	ascent(o in 0..amount){
		ascent(i in 0..360/num){
			CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),1,i*(hold/num)+o*(hold/num/sec),0,1,DS_COIN_YELLOW,10);
			CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),2,i*(hold/num)+(o*(hold/num/sec)*-1),-0.01,1,DS_COIN_WHITE,30);
		}
		wait(15);
	}
}
function spirit{
	track;
	follow();
}
task follow(){// Stellar_Emitter(object1,time2,scale3,speed4,firepitch5,fireyaw6,spread7,life8,numperframe9,blending,hue,saturation,alpha)
	loop{
		let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2,GetAngleToPlayer(objBoss)+20,DS_BALL_M_WHITE, 10);
		ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
		ObjRender_SetPosition(pos,GetPlayerX,GetPlayerY,1);
		
		Stellar_Emitter(obj,5000,0.9,1,0,0,10,10,10,2,BLEND_ALPHA+700,300,200);
		while(!Obj_IsDeleted(obj)){
			//ObjMove_SetDestAtWeight(obj,ObjRender_GetX(pos),ObjRender_GetY(pos),1,1.5);
			//snake(obj,GetAngleToPlayer(obj));
			let wvel = 2;
			//loop(2){
				ObjMove_AddPatternA2(obj, 0, 2.2, GetAngleToPlayer(obj), 0, wvel, 1.3);
				wait(15);
				wvel*=-1;
				//Stellar_Aura(obj,15,2,2,5,BLEND_ALPHA,700,300);
				wait(10);
			//}
			
			//wait(5);
			//yield;
		}
		wait(40);//fire again you get no break
	}
}
function snake(obj,aim){
	let wvel = 1.5;
	ascent(i in 0..8){
		//hold=
		ObjMove_AddPatternA2(obj, i*34, 2.2, aim, 0, wvel, 1.5);
		//ObjMove_AddPatternA3(obj,10,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE);
		wvel*=-1;
	}
}
function simp(i){
	if(i>=360){
		return (i-360);
	}else if(i<0){
		return (i+360);
	}else{
		return i;
	}
}
task track{
	ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
	loop{
		wait(15);
		ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
		//ObjMove_SetPosition(pos,0,0);
		ObjRender_SetPosition(pos,GetPlayerX,GetPlayerY,1);
	}
}
task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task TDrawLoop {
   		//125 width	256 height
	let animFrame = 0;
	let animFrame2 = 0;
	let dir;
	let speed; 
		// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
		//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}