#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["spell1"]
#Text["spell1"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"

let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let pos = ObjPrim_Create(OBJ_SPRITE_2D());
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(4500);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}//To do add a curved laser to the spirit that follows the player
//will make it look more like a spirit and stop the player from circling it constantly be aware of the fact that cuverd lasers eat up the cpu
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
	BMarker;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
      wait(120);
	  Stellar_Init();
	  spirit;
	  coin;
	  //coinburst;
	  //scytheSt;
   // movement;
 
}
task coin{
	let hold=0;
	//let amount = 5;
	let num = 12;
	let sec = 2.5;
	
	orbital();
	loop{
		loop(5){
			ascent(o in 0..5){
				ascent(i in 0..360/num){
					CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),1.7,i*(360/num)+o*(360/num/sec)+hold,0,1,DS_COIN_YELLOW,10);
				}
				wait(16);
			}
			hold+=20;
		}
		coinburst;//DS_BALL_M_PURPLE	
		wait(100);
	}
}
task orbital(){//460 230 25
//WriteLog(GetStgFrameWidth);
let count=0; 
	loop{
		let left = CreateShotA1(ObjMove_GetX(objBoss)-150, ObjMove_GetY(objBoss)-20, 0,GetAngleToPlayer(objBoss)+20,DS_BALL_M_PURPLE, 15);
		check(left);
		//Stellar_Emitter(left,5000,0.8,0.5,5,5,0.1,7,5,2,700,300,150);
					Stellar_Emitter(left,5000,0.8,0.5,0,0,0.1,7,5,2,630,300,150);
		//Stellar_Emitter(left,5000,0.8,1,10,10,0.1,7,1,2,630,300,150);
		let right = CreateShotA1(ObjMove_GetX(objBoss)+150, ObjMove_GetY(objBoss)-20, 0,GetAngleToPlayer(objBoss)+20,DS_BALL_M_PURPLE, 15);
		check(right);
		//Stellar_Emitter(right,5000,0.8,0.5,0,0,0.1,7,5,2,700,300,150);
					Stellar_Emitter(right,5000,0.8,0.5,0,0,0.1,7,5,2,630,300,150);
		//Stellar_Emitter(right,5000,0.8,1,10,10,0.1,7,1,2,630,300,150);
		//Stellar_Emitter(right,5000,0.8,1,0,0,4,7,10,2,690,300,250);
		orbShot(left,right);
		while(!Obj_IsDeleted(left)&&!Obj_IsDeleted(right)){
			//Obj_Delete(left);Obj_Delete(right);
		//ascent(count in 0..100){
			ObjMove_SetDestAtFrame(left,cos(count*2.3)*35+80,cos(count*1.5)*20+40,15);
			ObjMove_SetDestAtFrame(right,-cos(count*2.3)*35+304,cos(count*1.5)*20+40,15);
			//ObjMove_SetPosition(left,cos(count*2.3)*35+80,cos(count*1.5)*20+40);
			//ObjMove_SetPosition(right,cos(-count*2.3)*35+304,cos(count*1.5)*20+40);
			wait(15);
			count=count+20;
		}
		Obj_Delete(left);Obj_Delete(right);
		wait(15);
	}
}
task orbShot(left,right){
	wait(5);
	let count=0;
	while(!Obj_IsDeleted(left)&&!Obj_IsDeleted(right)){
		ascent(i in 0..90/18){
			CreateShotA1(ObjMove_GetX(left), ObjMove_GetY(left), 1.8,(GetAngleToPlayer(left))+i*6-11+cos(count*5)*10,DS_COIN_ORANGE, 10+((i-2.5)/3)^2*5+1);
			CreateShotA1(ObjMove_GetX(right), ObjMove_GetY(right), 1.8,(GetAngleToPlayer(right))+i*6-11-cos(count*5)*10,DS_COIN_ORANGE, 10+((i-2.5)/3)^2*5+1);
			//wait(((x-2.5)/7)^2*5+1);
		}
		wait(28);
		count++;
	}
}
task coinburst{
	let hold =360;
	let num =12;
	//let amount=9;
	let sec= 4;
	ascent(o in 0..9){
		ascent(i in 0..360/num){
			CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),1,i*(hold/num)+o*(hold/num/sec),0,1,DS_COIN_YELLOW,10);
			CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),2,i*(hold/num)+(o*(hold/num/sec)*-1),-0.01,1,DS_COIN_WHITE,30);
		}
		wait(15); 
	}
}
function spirit{
	//track;
	follow();
}
task follow(){// Stellar_Emitter(object1,time2,scale3,speed4,firepitch5,fireyaw6,spread7,life8,numperframe9,blending10,hue11,saturation12,alpha13)
	loop{
		let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2,GetAngleToPlayer(objBoss)+20,DS_BALL_M_PURPLE, 10);
		check(obj);
		ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
		//ObjRender_SetPosition(pos,GetPlayerX,GetPlayerY,1);
		let wvel = 2;

		//Stellar_Emitter(obj,5000,0.9,1,0,0,10,10,2,2,BLEND_ALPHA+700,300,200);
		//Stellar_Emitter(obj,5000,0.9,1,0,0,13,10,10,2,720,300,200);
		//Stellar_Emitter(obj,5000,0.9,1,0,0,10,10,10,2,700,300,200);
		Stellar_Emitter(obj,5000,0.8,0.5,5,5,0.1,7,5,2,620,300,150);

		
		while(!Obj_IsDeleted(obj)){
			
				ObjMove_AddPatternA2(obj, 0, 1.6, GetAngleToPlayer(obj), 0, wvel, 1.3);
				
				wait(15);
				wvel*=-1;
				//Stellar_Aura(obj,15,2,2,5,BLEND_ALPHA,700,300);
				wait(15);
			//}
			
			//wait(5);
			//yield;
		}
		wait(40);//fire again you get no break
	}
}
function snake(obj,aim){
	let wvel = 1.5;
	ascent(i in 0..8){
		//hold=
		ObjMove_AddPatternA2(obj, i*34, 2.2, aim, 0, wvel, 1.5);
		//ObjMove_AddPatternA3(obj,10,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE);
		wvel*=-1;
	}
}
function simp(i){
	if(i>=360){
		return (i-360);
	}else if(i<0){
		return (i+360);
	}else{
		return i;
	}
}
task track{
	ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
	loop{
		wait(15);
		ObjMove_SetPosition(pos,GetPlayerX,GetPlayerY);
		//ObjMove_SetPosition(pos,0,0);
		ObjRender_SetPosition(pos,GetPlayerX,GetPlayerY,1);
	}
}
task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task TDrawLoop {
   		//125 width	256 height
	let animFrame = 0;
	let animFrame2 = 0;
	let dir;
	let speed; 
		// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
		//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
	wait(5);
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
task BMarker()
{
	//let hold=GetEnemyBossSceneObjectID();
	let path = GetCurrentScriptDirectory() ~ "system/img/Bmarker.png";
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(obj, 0.98);
		ObjPrim_SetTexture(obj, path);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 160, 183);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetScaleXYZ(obj,0.4,0.4,0);
		
	let pathb = GetCurrentScriptDirectory() ~ "system/img/Bwheel.png";
		let objb = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objb, 0.027);
		ObjPrim_SetTexture(objb, pathb);
		ObjSprite2D_SetSourceRect(objb, 0, 0, 108, 109);
		ObjSprite2D_SetDestCenter(objb);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objb,0.4,0.4,0);
		
	let pathc = GetCurrentScriptDirectory() ~ "system/img/highlight.png";
		let objc = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objc, 0.024);
		ObjPrim_SetTexture(objc, pathc);
		ObjSprite2D_SetSourceRect(objc, 0, 0, 250, 231);
		ObjSprite2D_SetDestCenter(objc);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
		ObjRender_SetBlendType(objc,BLEND_ALPHA);
		ObjRender_SetAlpha(objc,100);
		
		let count=0;
		loop{
			//hold=GetEnemyBossSceneObjectID();
			ObjRender_SetAngleXYZ(objb,0,0,ObjMove_GetY(GetPlayerObjectID)*1.4+count*1.5);
			ObjRender_SetPosition(obj,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+25, 2);
			ObjRender_SetPosition(objb,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			ObjRender_SetPosition(objc,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			
			if(ObjMove_GetX(GetPlayerObjectID)>ObjMove_GetX(objBoss)-35&&ObjMove_GetX(GetPlayerObjectID)<ObjMove_GetX(objBoss)+35){
				ObjRender_SetAlpha(objc,200);count=count+2;ObjRender_SetScaleXYZ(objc,0.8,0.8,0);
			}else{ObjRender_SetAlpha(objc,100);}
			ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
			yield;
		}
}
task check(obj){
	while(!Obj_IsDeleted(obj)){
		if(ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID,INFO_CURRENT_LIFE)<1){
		//yield;
			Obj_Delete(obj);
		}
	
		yield;
	}
}