#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["spell4"]
#Text["spell4"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"
let objBoss;
//let imgpath = GetCurrentScriptDirectory() ~ "./New_Background.png";
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let state=0;
let animFrame = 0;
let sp=0;
let bigsp = false;
let imgpath = GetCurrentScriptDirectory() ~ "./New_Background.png";
let xwidth=0;
let par;
//18,3.5
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(9000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	SetPlayerLife(4);
	//SetStgFrame(32,16, 416, 464, 20, 80);
      wait(120);//100 
		Stellar_Init();
		//32, 16, 416, 464, 20, 80
		//SetStgFrame(32,16, 416, 464, 20, 80);
		walls;
		wait(5);
		coins;
		river;
		
		
}
task coins{
	let aim;
	let hold;
	let count=0;
	let size;
	let dir=1;
	let col;
	//loop{
		hold=8;
		wait(30);
		loop(10){
			size=110/hold;			
			ascent(o in 0..4){
				//size=90/(hold-o);
				if(o==1||o==2){col=5;}else{col=0;}
				ascent(i in 0..100/size){
					let obj = CreateShotA2(GetCenterX,ObjMove_GetY(objBoss),(2/3)*o,90-41*dir+i*size*dir+o*2.3*dir,(2/3)/2,2,DS_COIN_YELLOW+col,i*2.7*o);
					//Obj_SetValue(obj,1,2);
				}
				wait(5+o*2);
			}
			wait(43);
			size=85/6;
			ascent(i in 0..85/size){
				let obj = CreateShotA2(GetCenterX,ObjMove_GetY(objBoss),2,90+45*dir-i*(size-2)*dir,0.01,2.5,DS_COIN_ORANGE,0);
				//ObjRender_SetColorHSV(obj,NO_CHANGE,NO_CHANGE,200);
				//Obj_SetValue(obj,1,2);
			}
			dir=dir*-1;
			
		}
		
		loop(10){
			loop(6){
			size=38/2;
			ascent(i in 0..38/size){
				loop(2){
					let obj=CreateShotA1(GetCenterX,ObjMove_GetY(objBoss),1.7,90+21*dir+i*size*dir,DS_COIN_YELLOW,2);
					coin(obj);
					dir=dir*-1;
				}
				yield;
			}
			wait(10);
			/*size=70/2/3;
			//ascent(o in 0..6){
				ascent(i in 0..70/2/size){
					loop(2){
						let obj=CreateShotA1(GetCenterX,ObjMove_GetY(objBoss),1.65,90+i*size*dir+cos(count*30.3)*10,DS_COIN_YELLOW,0);
						coin(obj);
					}
					dir=dir*-1;
					//wait(2);
				}
				//wait(5);
			//}*/
			wait(20);
			count++;
			}
			
			wait(50);
		}
		
		let obj = CreateShotA1(GetCenterX,ObjMove_GetY(objBoss),2,100,DS_COIN_ORANGE,0);
		//ObjMove_GetSpeed	ObjMove_GetAngle
		ObjMove_AddPatternB1(obj,10,ObjMove_GetSpeed(obj)*cos(ObjMove_GetAngle(obj)),ObjMove_GetSpeed(obj)*sin(ObjMove_GetAngle(obj)));
}

task coin(obj){
	while(ObjMove_GetX(obj)<GetCenterX+(xwidth/2)&&
		ObjMove_GetX(obj)>GetCenterX-(xwidth/2)){yield;}
		ObjMove_AddPatternB1(obj,0,-ObjMove_GetSpeed(obj)*cos(ObjMove_GetAngle(obj)),ObjMove_GetSpeed(obj)*sin(ObjMove_GetAngle(obj)));
		//ObjMove_AddPatternB1(obj,0,,NO_CHANGE);
		//ObjMove_SetAngle(obj,ObjMove_GetAngle(obj)-90);
}
task river{
	waveA;
	//waveB;
	wait(20);
	spirits;
}
task spirits{
	wait(70);
	spirit(rand(0,5),sp,false);
	wait(150);
	spirit(rand(0,5),sp,true);
	let count=rand(5,6);
	loop{
		while(sp<4){
			wait(20);
			count++;
			//let place=0;
			//while(!spa[place]==null){place++;}
			/*if(bigsp==false){
				bigsp=true;
				spirit(count,sp,bigsp);
				wait(50);
			}else{*/
				spirit(count,sp,false);
			//}
			
			wait(30);
		}yield;
	}
}
task spirit(count,place,big){// Stellar_Emitter(object1,time2,scale3,speed4,firepitch5,fireyaw6,spread7,life8,numperframe9,blending10,hue11,saturation12,alpha13)
	sp++;
	let aim=GetAngleToPlayer(objBoss);
	let hold;
	let slow;
	let obj;
	let wvel;
	let list;
	if(big==true){
		obj=CreateShotA1(cos(count*137.5)*(xwidth/2-75)+GetCenterX,0,1.3,aim,DS_BALL_L_PURPLE,60);
		ObjRender_SetBlendType(obj,BLEND_ALPHA);
		ObjRender_SetAlpha(obj,400);
		Obj_SetValue(obj,1,2);
		wait(55);
		Stellar_Emitter(obj,5000,2,0.5,0,0,0.1,18,2,2,700,300,150);
		wvel = 1.6;
		hold=1.4;
		slow=43.75;
	}else{
		obj=CreateShotA1(cos(count*137.5)*(xwidth/2-75)+GetCenterX,0,1.5,aim,DS_BALL_M_A_PURPLE,20);
		Stellar_Emitter(obj,5000,0.8,0.5,5,5,0.1,7,5,2,700,300,150);
		Obj_SetValue(obj,1,2);
		wvel = 1.2;
		hold=2.3;
		slow=34;
	}
	ascent(i in 0..10){
		//hold=
		ObjMove_AddPatternA2(obj, i*slow, hold, aim, 0, wvel, 3);
		//ObjMove_AddPatternA3(obj,10,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE);
		wvel*=-1;
	}
	//wait(170);
	if(!big==true){
		while(ObjMove_GetY(obj)<GetStgFrameHeight+10&&!Obj_IsDeleted(obj)){
			list=GetShotIdInCircleA2(ObjMove_GetX(obj),ObjMove_GetY(obj),15,TARGET_ENEMY);
			if(length(list)>1){
				ascent(i in 0..length(list)){
					if(!Obj_IsValueExists(list[i],1)){//spiritPush
						ObjMove_SetX(list[i],(17/GetObjectDistance(obj,list[i]))*(ObjMove_GetX(list[i])-ObjMove_GetX(obj))+ObjMove_GetX(obj));
						ObjMove_SetY(list[i],(17/GetObjectDistance(obj,list[i]))*(ObjMove_GetY(list[i])-ObjMove_GetY(obj))+ObjMove_GetY(obj));
						//ObjMove_AddPatternB1(list[i]0,,)
					}
				}
				//CreateShotA1(GetCenterX,GetCenterY,1.3,aim,DS_BALL_L_PURPLE,60);
			}
			yield;
		}
	}else{
		while(ObjMove_GetY(obj)<GetStgFrameHeight+10&&!Obj_IsDeleted(obj)){
			list=GetShotIdInCircleA2(ObjMove_GetX(obj),ObjMove_GetY(obj),35,TARGET_ENEMY);
			if(length(list)>1){
				ascent(i in 0..length(list)){
					if(!Obj_IsValueExists(list[i],1)){
						ObjMove_SetX(list[i],(36.5/GetObjectDistance(obj,list[i]))*(ObjMove_GetX(list[i])-ObjMove_GetX(obj))+ObjMove_GetX(obj));
						ObjMove_SetY(list[i],(36.5/GetObjectDistance(obj,list[i]))*(ObjMove_GetY(list[i])-ObjMove_GetY(obj))+ObjMove_GetY(obj));
					}
				}
			}
			yield;
		}
	}
	sp--;
	Obj_Delete(obj);
}
task waveA{
	let count=GetAngleToPlayer(objBoss);
	let dir=1;
	let hold=0;
	let aim=1;
	let cinamatic=13;
	loop{
		loop(2){
			ascent(i in 1..3){
				dir=1;
				if(i+1>1){
					hold=2
				}
				loop(hold){
					par = CreateShotA1(cos(count*37.3)*192+192+i^2*3*dir,-i*5,0,90,DS_SCALE_A_BLUE,10);
					Obj_SetValue(par,1,2);
					ObjMove_SetDestAtSpeed(par,cos(count*37.3+17.5)*192+192+i^2*3.8*dir,GetStgFrameHeight()+150,1.8);
					if(cos(count*37.3)*192+192+i^2*3*dir<cos(count*37.3+17.5)*192+192+i^2*3.8*dir){
						ObjRender_SetColorHSV(par,220,120-i*5,350);
					}else{
						ObjRender_SetColorHSV(par,240,120-i*5,350);
					}
					wave(par+cinamatic*2);
					dir=dir*-1;
				}
			}
		
			aim=aim*-1;
			count++;
			cinamatic=max(cinamatic-1,0);
			wait(3+cinamatic*2);
		}
		wait(3+cinamatic*2);
		ascent(i in 0..2){
			dir=1;
			if(i+1>1){
				hold=2
			}
			loop(hold){
				par = CreateShotA1(sin(count*27.3)*192+192+i^2*10*dir,-i*6,0,90,DS_SCALE_A_BLUE,5);
					Obj_SetValue(par,1,2);
				ObjMove_SetDestAtSpeed(par,sin(count*27.3+27.5)*192+192+i^2*10*dir,GetStgFrameHeight()+150,2.1);
				if(sin(count*27.3)*192+192+i^2*10*dir>sin(count*27.3+27.5)*192+192+i^2*10*dir){
					ObjRender_SetColorHSV(par,220,80+i*10,350);
				}else{
					ObjRender_SetColorHSV(par,230,80+i*10,350);
				}
				wave(par);
				dir=dir*-1;
			}
		}
	}
}

task wave(obj){
	//ObjShot_SetIntersectionCircleA1(obj,5);
	//ObjShot_SetIntersectionEnable(obj,false);
	ObjRender_SetPosition(obj,ObjMove_GetX(obj),ObjMove_GetY(obj),10);
	Obj_SetValue(obj,1,2);
	ObjRender_SetBlendType(obj,BLEND_ALPHA);
	ObjRender_SetAlpha(obj,230);
	wait(269);
	Obj_Delete(obj);
}
task walls{//SetPlayerClip
	let left = ObjPrim_Create(OBJ_SPRITE_2D());
	ObjPrim_SetTexture(left,imgpath);
        ObjSprite2D_SetSourceRect(left, 32,16 ,0 , 464); //alternatively, 0, 0, 384, 448
        ObjSprite2D_SetDestRect(left, 0, 0, 0, 448);
       //ObjRender_SetPosition(left,0,0, 150); //move it to the top left corner of the screen
	   	Obj_SetRenderPriority(left, 0.80);
		
	let right = ObjPrim_Create(OBJ_SPRITE_2D());
	ObjPrim_SetTexture(right,imgpath);
        ObjSprite2D_SetSourceRect(right, 416,16 ,416 , 464); //alternatively, 0, 0, 384, 448
        ObjSprite2D_SetDestRect(right, 384, 0, 384, 448);
       //ObjRender_SetPosition(left,0,0, 150); //move it to the top left corner of the screen
	   	Obj_SetRenderPriority(right, 0.80);	

		//ObjSprite2D_SetDestCenter(left);
		//ObjRender_SetBlendType(left, BLEND_ALPHA);
		//ObjRender_SetAlpha(left,150);
		ascent(i in 0..380){//(i(i-740))/-740
		SetPlayerClip((i*(i-740))/(-740)+5,0, GetStgFrameWidth()-(i*(i-740))/(-740)-5,GetStgFrameHeight);
			loop(12){
				//ObjMove_SetX(GetPlayerObjectID(),max(ObjMove_GetX(GetPlayerObjectID()),(i*(i-740))/(-740)+5));
				//ObjMove_SetX(GetPlayerObjectID(),min(ObjMove_GetX(GetPlayerObjectID()), GetStgFrameWidth()-(i*(i-740))/(-740)-5));
				
				yield;
			}
			ObjSprite2D_SetSourceRect(left, 32,16 ,32+(i*(i-740))/(-740) , 464); //alternatively, 0, 0, 384, 448
			ObjSprite2D_SetDestRect(left, 0, 0, (i*(i-740))/(-740), 448);
			ObjMove_SetX(GetPlayerObjectID(),max(ObjMove_GetX(GetPlayerObjectID()),(i*(i-740))/(-740)+5));
			
			ObjSprite2D_SetSourceRect(right, 416-(i*(i-740))/(-740),16 ,416 , 464); //alternatively, 0, 0, 384, 448
			ObjSprite2D_SetDestRect(right, GetStgFrameWidth()-(i*(i-740))/(-740), 0,GetStgFrameWidth() , 448);
			ObjMove_SetX(GetPlayerObjectID(),min(ObjMove_GetX(GetPlayerObjectID()), GetStgFrameWidth()-(i*(i-740))/(-740)-5));
			SetPlayerClip((i*(i-740))/(-740)+5,0, GetStgFrameWidth()-(i*(i-740))/(-740)-5,GetStgFrameHeight);
			xwidth=(GetStgFrameWidth()-(i*(i-740))/(-740))-(i*(i-740))/(-740);
		}
		/*loop{
			ObjMove_SetX(GetPlayerObjectID(),max(ObjMove_GetX(GetPlayerObjectID()),(370*(370-740))/(-740)+5));
			ObjMove_SetX(GetPlayerObjectID(),min(ObjMove_GetX(GetPlayerObjectID()), GetStgFrameWidth()-(370*(370-740))/(-740)-5));
			yield;
		}*/
}



task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task TDrawLoop {
   		//125 width	256 height
	
	let animFrame2 = 0;
	let dir;
	let speed; 
		// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
		//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(state==0){
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		//WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		//WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		}else{
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,128*5,0,128*6,128);}
			if(animFrame >= 15 && animFrame < 50) { ObjSprite2D_SetSourceRect(objBoss,128*5,128,128*6,128*2);}
			if(animFrame >= 50 && animFrame < 65) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*2,128*6,128*3);}
			if(animFrame >= 65 && animFrame < 120) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*3,128*6,128*4);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}//290
			if(animFrame > 120) { animFrame = 0;state=0; }
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}