#TouhouDanmakufu[Single]
#ScriptVersion[3]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#Title["nonspell3"]
#Text["nonspell3"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"

let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let imgpath = GetCurrentScriptDirectory() ~ "./IWarnedYou.png";
let state=0;
let animFrame = 0;
let total=0;
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(7000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(50);
    }
    /*case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }*/
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    //ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
	BMarker;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	Stellar_Init();
	wait(90);
	
	//ObjMove_SetDestAtFrame(fodder, GetCenterX+100, 100, 60);	
	spirits;
	Bshoot;
}
task Bshoot{
	let a=180;
	let dir=1;
	let t=10;
	//let ahold;
	//let r=50;
	while(ObjEnemy_GetInfo(objBoss,INFO_LIFE)>0){
		ascent(n in 0..2){
			ascent(i in 0..t){
				//ahold=(a/2)*dir+i*(a/9)*dir;
				CreateShotA1(ObjMove_GetX(objBoss)-(t*5/2+5)*dir+i*5*dir,ObjMove_GetY(objBoss)+5,1.7,90-(a/2)*dir+i*(a/t)*dir+(a/t)/2*dir*n,DS_COIN_YELLOW,2+(t-i));
				//CreateShotA1(ObjMove_GetX(objBoss)+(sin(ahold)*r)/sin(90),ObjMove_GetY(objBoss)+(sin(180-ahold-90)*r)/sin(90),1.6,GetAngleToPlayer(objBoss),DS_SCALE_PURPLE,5);

			}
			//yield;
			wait(18);
			
		}
		wait(2);
		dir=dir*-1;
	}
}
task spirits{
	let dir=1;let sdir=1;
	loop{
		wait(120);
		if(total<=2){
			ascent(i in 0..5){
				if(total<=7){
					let fodder=CGhost(ObjMove_GetX(objBoss)+40*dir,ObjMove_GetY(objBoss),27,200,40);
					snakeB(fodder,dir,GetAngleToPlayer(fodder)-(5*15/2)*dir+i*15*dir,1.2,1.8);
					total++;
					Eshoot(fodder,sdir);
				}
				sdir=sdir*-1;
			}
			dir=dir*-1;
		}
	}
}
task Eshoot(obj,dir){
	yield;
	while(ObjEnemy_GetInfo(obj,INFO_LIFE)>0){
		ascent(a in 0..16){
			ascent(i in 0..4){
				if(ObjEnemy_GetInfo(obj,INFO_LIFE)<=0){return;}
				CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),1.6,ObjMove_GetAngle(obj)+i*(360/4)*dir,DS_SCALE_PURPLE,5);//DS_NEEDLE_BLUE
				
				yield;
			}
			if(ObjEnemy_GetInfo(obj,INFO_LIFE)<=0){return;}
			CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),1.4,ObjMove_GetAngle(obj)+a*(360/16)*dir,DS_NEEDLE_BLUE,7);
			wait(15);
			
		}
	}
}
task snakeB(obj,dir,a,s,w){
	while(!Obj_IsDeleted(obj)){
		while(GetObjectDistance(obj,objBoss)<GetObjectDistance(objBoss,GetPlayerObjectID)-100){
			ObjMove_AddPatternA2(obj,0,s,a,0,w*dir,2);
			dir=dir*-1;
			wait(20);
		}
		loop(2){
			a=GetAngleToPlayer(obj);
			s=s-0.2;
			loop(10){
				ObjMove_AddPatternA2(obj,0,s,a,0,w*dir,2);
				dir=dir*-1;
				wait(15);
			}
		}
		ObjEnemy_SetLife(obj,0);
		
		/*loop(10){
			ObjMove_AddPatternA2(obj,0,s,a,0,w*dir,2);
			dir=dir*-1;
			wait(15);
		}*/
	}
}
function CGhost(x,y,r,h,d){
	let fodder=ObjEnemy_Create(OBJ_ENEMY);
	ObjEnemy_Regist(fodder);
	let img = GetCurrentScriptDirectory() ~ "system/img/Wghost.png";
	ObjPrim_SetTexture(fodder,img);
	ObjSprite2D_SetSourceRect(fodder, 0, 0, 27, 27);
	ObjSprite2D_SetDestRect(fodder, 0, 0, r, r);
	ObjSprite2D_SetDestCenter(fodder);	
	ObjEnemy_SetLife(fodder,h);
	ObjEnemy_SetDamageRate(fodder,d,d);
	hitbox(fodder,r);
	ObjMove_SetPosition(fodder,x,y);
	Stellar_Emitter(fodder,2000,1,2,100,100,3,10,2.8,2,630,140,150);
	
	return fodder;
}
task hitbox(fodder,r){
	let blink=0;
	while((!Obj_IsDeleted(fodder)&&ObjEnemy_GetInfo(fodder,INFO_LIFE)>0)&&!(ObjMove_GetX(fodder)<0||ObjMove_GetX(fodder)>GetStgFrameWidth||ObjMove_GetY(fodder)>GetStgFrameHeight)){
		ObjEnemy_SetIntersectionCircleToShot(fodder,ObjMove_GetX(fodder),ObjMove_GetY(fodder),r+5);
		if(ObjCol_GetIntersectedCount(fodder)>0&&blink<2){
			blink=10;
			Stellar_Emitter(fodder,3,1.2,3,1,1,3,10,2,1,630,300,250);
		}
		blink--;
		yield;
	}
	//if((ObjMove_GetX(fodder)<0||ObjMove_GetX(fodder)>GetStgFrameWidth||ObjMove_GetY(fodder)>GetStgFrameHeight)){}
	//function Stellar_Emitter(object,time,scale,speed,firepitch,fireyaw,spread,life,numperframe,blending,hue,saturation,alpha)
	ObjRender_SetBlendType(fodder,BLEND_ALPHA);
	//Stellar_Explosion(fodder,19,0.2,BLEND_ALPHA,200);
	Stellar_Emitter(fodder,15,1.5,2,0,0,1,18,1,2,630,230,200);
	ascent(i in 0..20){
		ObjRender_SetAlpha(fodder,255-i*(255/20));
		yield;
	}
	total--;
	Obj_Delete(fodder);
	//ObjShot_FadeDelete(fodder);
}
function stateUp{
	if(ObjMove_GetSpeed(objBoss)!=0){
		objBossState=1;
	}else{
		objBossState=0;
	}
}

 
task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
		let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task attack{
	state=1;
	animFrame=0;
}

task TDrawLoop {		
		//125 width	256 height
		
let animFrame2 = 0;

let dir;
	let speed; 

	// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
	//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(state==0){
			if(speed == 0){ 
				ObjRender_SetAngleXYZ(objBoss,0,0,0);
				ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
				if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
				if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
				if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
				//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
				animFrame2 = 0;
			}
			else if(cos(dir) < 0){ 
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
				if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
				if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
			}
			else if(cos(dir) > 0){ 
			//WriteLog(0);
				ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
				if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
				if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
			}
		//animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		
		}else if(state==1){
			WriteLog(1000);
			if(animFrame < 10) { ObjSprite2D_SetSourceRect(objBoss,128*5,0,128*6,128);}
			if(animFrame >= 10 && animFrame < 240) { ObjSprite2D_SetSourceRect(objBoss,128*5,128,128*6,128*2);}
			if(animFrame >= 240 && animFrame < 270) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*2,128*6,128*3);}
			if(animFrame >= 270 && animFrame < 300) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*3,128*6,128*4);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}//290
			if(animFrame > 120*2+60) { animFrame = 0;state=0; }
		}
		animFrame++;
		yield;
	}
	
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
function evenOdd(){
	let hold=rand(0,2);
	if(hold<1){
		return -1;
	}else{
		return 1
	}
}
task BMarker()
{
	//let hold=GetEnemyBossSceneObjectID();
	let path = GetCurrentScriptDirectory() ~ "system/img/Bmarker.png";
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(obj, 0.98);
		ObjPrim_SetTexture(obj, path);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 160, 183);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetScaleXYZ(obj,0.4,0.4,0);
		
	let pathb = GetCurrentScriptDirectory() ~ "system/img/Bwheel.png";
		let objb = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objb, 0.027);
		ObjPrim_SetTexture(objb, pathb);
		ObjSprite2D_SetSourceRect(objb, 0, 0, 108, 109);
		ObjSprite2D_SetDestCenter(objb);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objb,0.4,0.4,0);
		
	let pathc = GetCurrentScriptDirectory() ~ "system/img/highlight.png";
		let objc = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objc, 0.024);
		ObjPrim_SetTexture(objc, pathc);
		ObjSprite2D_SetSourceRect(objc, 0, 0, 250, 231);
		ObjSprite2D_SetDestCenter(objc);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
		ObjRender_SetBlendType(objc,BLEND_ALPHA);
		ObjRender_SetAlpha(objc,100);
		
		let count=0;
		loop{
			//hold=GetEnemyBossSceneObjectID();
			ObjRender_SetAngleXYZ(objb,0,0,ObjMove_GetY(GetPlayerObjectID)*1.4+count*1.5);
			ObjRender_SetPosition(obj,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+25, 2);
			ObjRender_SetPosition(objb,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			ObjRender_SetPosition(objc,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			
			if(ObjMove_GetX(GetPlayerObjectID)>ObjMove_GetX(objBoss)-35&&ObjMove_GetX(GetPlayerObjectID)<ObjMove_GetX(objBoss)+35){
				ObjRender_SetAlpha(objc,200);count=count+2;ObjRender_SetScaleXYZ(objc,0.8,0.8,0);
			}else{ObjRender_SetAlpha(objc,100);}
			ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
			yield;
		}
}