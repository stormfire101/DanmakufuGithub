#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["nonspell1"]
#Text["nonspell1"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"
let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let count=0;
let imgpath = GetCurrentScriptDirectory() ~ "./ghost.png";
let open =true;
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(6000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(40);
    }
    /*case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }*/
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 70, 60);
    //ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
	BMarker();
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	Stellar_Init();
	//check;
    wait(100);
	bossPlzWork;
	orbitals;
	//wait(20);
		//CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3,GetAngleToPlayer(objBoss),DS_BALL_M_PURPLE, 15);
		
	//CreateShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),3,GetAngleToPlayer(objBoss)0,4,DS_BALL_M_PURPLE,15);
	//
}
task check(obj){
	while(!Obj_IsDeleted(obj)){
	if(ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID,INFO_CURRENT_LIFE)<1){
		//yield;
		Obj_Delete(obj);
	}
	
	yield;
	}
}
task BMarker()
{
	//let hold=GetEnemyBossSceneObjectID();
	let path = GetCurrentScriptDirectory() ~ "system/img/Bmarker.png";
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(obj, 0.98);
		ObjPrim_SetTexture(obj, path);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 160, 183);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetScaleXYZ(obj,0.4,0.4,0);
		
	let pathb = GetCurrentScriptDirectory() ~ "system/img/Bwheel.png";
		let objb = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objb, 0.027);
		ObjPrim_SetTexture(objb, pathb);
		ObjSprite2D_SetSourceRect(objb, 0, 0, 108, 109);
		ObjSprite2D_SetDestCenter(objb);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objb,0.4,0.4,0);
		
	let pathc = GetCurrentScriptDirectory() ~ "system/img/highlight.png";
		let objc = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objc, 0.024);
		ObjPrim_SetTexture(objc, pathc);
		ObjSprite2D_SetSourceRect(objc, 0, 0, 250, 231);
		ObjSprite2D_SetDestCenter(objc);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
		ObjRender_SetBlendType(objc,BLEND_ALPHA);
		ObjRender_SetAlpha(objc,100);
		
		let count=0;
		loop{
			//hold=GetEnemyBossSceneObjectID();
			ObjRender_SetAngleXYZ(objb,0,0,ObjMove_GetY(GetPlayerObjectID)*1.4+count*1.5);
			ObjRender_SetPosition(obj,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+25, 2);
			ObjRender_SetPosition(objb,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			ObjRender_SetPosition(objc,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			
			if(ObjMove_GetX(GetPlayerObjectID)>ObjMove_GetX(objBoss)-35&&ObjMove_GetX(GetPlayerObjectID)<ObjMove_GetX(objBoss)+35){
				ObjRender_SetAlpha(objc,200);count=count+2;ObjRender_SetScaleXYZ(objc,0.8,0.8,0);
			}else{ObjRender_SetAlpha(objc,100);}
			ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
			yield;
		}
}
task orbitals{
	loop{
		//wait(20);
		if(open==true){
			open=false;
			count=0;		
			ascent(i in 0..5){
				orbital(i); 
				WriteLog(42.000);
				wait(31);
			}
		
		}
		wait(90);
		yield;
	}
	//orbital(0);
	//orbital(2);
}
task orbital(hold){
	wait(12*hold);
		//let obj1 = CreateShotA1(ObjMove_GetX(objBoss)-28*2, ObjMove_GetY(objBoss), 0,GetAngleToPlayer(objBoss)+20,DS_BALL_M_PURPLE, 15);
	let obj1 = CreateShotA1(ObjMove_GetX(objBoss)-28-4, ObjMove_GetY(objBoss)+28+6, 0,GetAngleToPlayer(objBoss)+20,DS_BALL_M_PURPLE, 15);
	let dir=11;
	let r=29;
	let time=(hold-1)*35;
	
		//Stellar_Emitter(left,5000,0.8,0.5,5,5,0.1,7,5,2,700,300,150);
	//Stellar_Emitter(obj1,5000,0.8,0.5,0,0,0.1,5,5,2,630,300,150);
	Stellar_Emitter(obj1,5000,0.8,0.2,5,5,0.1,7,0.1,2,627,300,150);
		//ObjMove_AddPatternA2(obj1,0,360/170,90,0,-360/(r*3.1415926535897932384626433832795*2),3);
	ObjMove_AddPatternA2(obj1,0,360/200,90,0,-360/(r*3.1415926535897932384626433832795*2.4),3);
	orbShoot(obj1,hold);
	check(obj1);
	loop{
		//ObjMove_AddPatternA2(obj1,0,360/170,90,0,-360/(18*3.1415926535897932384626433832795*2)+dir,3);
			//ObjMove_SetAngularVelocity(obj1,-360/(r*3.1415926535897932384626433832795*2)+dir);
		ObjMove_SetAngularVelocity(obj1,-360/(r*3.1415926535897932384626433832795*2.4)+dir);
		//yield;
		wait(13);//time=time+10;
		dir=dir*-1;
		//save=obj1;
		
		if(Obj_IsDeleted(obj1)){//32
			WriteLog(42.001);
			Obj_Delete(obj1);
			//yield;
			if(open==false){
				WriteLog(42.0012);
				open=true;
				//orbitals;
			}
			return;
		}
		if(open==true){
			WriteLog(42.002);
			Obj_Delete(obj1);
			//orbitals;
			//open=true;
			return;
		}
	}
}
task bossPlzWork{
	let swiv=0;
	wait(10);
	loop{
		ascent(i in 0..8){
			//CreateShotA1(ObjMove_GetX(objBoss)-5/2+i+cos(swiv), ObjMove_GetY(objBoss),2.4,90-7*13.7/2+i*13.7+cos(swiv*36)^7*14.1,DS_COIN_YELLOW,5);
			CreateShotA1(ObjMove_GetX(objBoss)-5/2+i+cos(swiv), ObjMove_GetY(objBoss),2.3,90-7*11.1/2+i*11.1+cos(swiv*45)^3*20.1,DS_COIN_YELLOW,5);
			//CreateShotA1(ObjMove_GetX(objBoss)-5/2+i+cos(swiv), ObjMove_GetY(objBoss),2.4,90-(cos(swiv*36)^3)*10,DS_COIN_YELLOW,5);
		}
		wait(15);swiv++;
	}
}
task orbShoot(obj,hold){
	wait(10);
	//wait(hold*2);
	loop{
		if(Obj_IsDeleted(obj)){
			return;
		}
		//wait(hold*19);
		coins(obj,hold);
		wait((31/2)*5);
		//wait(10+hold*8.7);
		
	}
}
task coins(obj,hold){
	//let aim=GetAngleToPlayer(obj);
	ascent(i in -1..2){
			CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),2.5,GetAngleToPlayer(obj)+i*21,DS_COIN_WHITE,4);
		}
		wait(10);
		if(Obj_IsDeleted(obj)){
			return;
		}
		ascent(i in 0..2){
			CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),2.7,GetAngleToPlayer(obj)+16/2-i*16,DS_COIN_ORANGE,4);
		}
		wait(11);
		if(Obj_IsDeleted(obj)){
			return;
		}
		ascent(i in -2..3){
			CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),2.5,GetAngleToPlayer(obj)+i*15,DS_COIN_WHITE,4);
		}
		if(Obj_IsDeleted(obj)){
			return;
		}
}
function stateUp{
	if(ObjMove_GetSpeed(objBoss)!=0){
		objBossState=1;
	}else{
		objBossState=0;
	}
}

 task spiritTurn(dir){
	 let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2, GetAngleToPlayer(objBoss),DS_FIRE_BLUE, 3); 
	 let save = rand(0.6,2);
	 let hold = 180*dir;
	 ObjMove_AddPatternA4(obj,1,2,hold,0,0,ObjMove_GetSpeed(obj),GetPlayerObjectID(),NO_CHANGE);
	 while((absolute(hold))-(absolute(save))>0){
		wait(1);
		
		//ObjMove_AddPatternA4(obj,1,2,hold,0,turn,ObjMove_GetSpeed(obj),GetPlayerObjectID(),NO_CHANGE);
		//hold=floor(hold-hold/10);
				
		ObjMove_AddPatternA4(obj,1,2,hold,0,0,ObjMove_GetSpeed(obj),GetPlayerObjectID(),NO_CHANGE);
		hold-=save*dir;
		//WriteLog((absolute(hold))-(absolute(save)));
	 }
	 ObjMove_AddPatternA4(obj,1,2,0,0,0,ObjMove_GetSpeed(obj),GetPlayerObjectID(),NO_CHANGE);
	ascent(i in -1..3){
		let spread = CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),2,ObjMove_GetAngle(obj)+i*7,DS_FIRE_BLUE,0);
	}
	Obj_Delete(obj);
    }
	
task movement{
	let count=0;
   /* while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
		let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }*/
	 while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
		
       /* let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		
        wait(240);*/
		wait(100);
		loop(50){
			let hold=ObjPrim_Create(OBJ_SPRITE_2D());
			let x=cos(count)*100+192;
			let y=sin(count)*30+90;
			ObjRender_SetX(hold,x);
			ObjRender_SetY(hold,y);
			ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/2);
			count=count+20;
			//wait(GetObjectDistance(objBoss,hold)/2);
			wait(12)
			//yield;
		}
    }
}
task TDrawLoop {		
		//125 width	256 height
		let animFrame = 0;
let animFrame2 = 0;

let dir;
	let speed; 

	// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
	//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
	wait(5);
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
function evenOdd(){
	let hold=rand(0,2);
	if(hold<1){
		return -1;
	}else{
		return 1
	}
}