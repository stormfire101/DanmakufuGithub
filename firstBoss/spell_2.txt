#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["spell2"]
#Text["spell2"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"

let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let pos = ObjPrim_Create(OBJ_SPRITE_2D());
let holdX=0;
let time;
let count=0;
let stop=false;
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(6000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
	BMarker;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	Stellar_Init();
    wait(120);
	
	//movement;
	let dir=1;
	loop{
		let x=min(max(GetPlayerX(),125),GetStgFrameWidth-125);
		//Stellar_Charge(objBoss,20,0.2,BLEND_ALPHA,360);
		wait(20);
		sycthe(x);
		wait(30);
		//coins;
		//movement;
		wait(730);
		stop=true;
		wait(100);
		
		//dir=dir*-1;
	}
}

 

task sycthe(x){
	holdX=x;
	
	let hold=ObjPrim_Create(OBJ_SPRITE_2D());
			//let x=;
			let y=90+rand(-20,20);
			ObjRender_SetX(hold,x);
			ObjRender_SetY(hold,y);
			ObjMove_SetDestAtFrame(objBoss,x,y,max(GetObjectDistance(objBoss,hold)/3,1));
			wait(max(GetObjectDistance(objBoss,hold)/3,1));
	
	let obj = CreateShotA1(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),0,0,DS_SCALE_A_WHITE,10);

	CreateStraightLaserA1(x,GetStgFrameHeight,(360-360/4),GetScreenHeight()+20,60,700,DS_BEAM_PURPLE,80);
	ObjMove_SetDestAtFrame(obj,x,GetStgFrameHeight(),70);
	wait(80);
	emit(x);
	
	stop =false;
	move(x);
}
task move(X){
if(stop==false){
	let hold=ObjPrim_Create(OBJ_SPRITE_2D());
	let x=0;let y=0;
	if(GetPlayerX<X){
		ObjRender_SetX(hold,X/2);
		x=X/2;
	}else{
		WriteLog(001);
		ObjRender_SetX(hold,X+(GetStgFrameWidth-X)/2);
		x=X+(GetStgFrameWidth-X)/2;
	}
	
	ObjRender_SetY(hold,90+rand(-30,30));
	ObjMove_SetDestAtFrame(objBoss,x,90+rand(-30,30),max(GetObjectDistance(objBoss,hold)/2,1));//wheight
	wait(max(GetObjectDistance(objBoss,hold)/2,1));
	
	let count=0;x=ObjMove_GetX(objBoss);//let y=ObjMove_GetY(objBoss);
	
	while(stop==false){
		ObjRender_SetX(hold,x+cos(count*25)*45);
		ObjRender_SetY(hold,120+sin(count*20)*23);
		ObjMove_SetDestAtFrame(objBoss,x+cos(count*25)*25,120+sin(count*20)*23,max(GetObjectDistance(objBoss,hold)/2,1));
		//wait(max(GetObjectDistance(objBoss,hold)/2,1)-0.9);
		wait(5);
		count++;
	}
}
}
task emit(X){//DS_RICE_S_PURPLE
	let dis=30;
		//let dis=32;
	let hold=GetStgFrameHeight/2/dis;
	let obj;
	let keep=(7)*30;
	let swiv=1;
	loop((600-50)/(15.2*2*3)){
		ascent(swiv in 0..3){	
			ascent(n in 0..2){
				ascent(o in 0..2){
					ascent(i in 0+(4*(n-1))..hold+(4*n)){
						//yield;
						obj = CreateShotA1(X,(i*dis)+(keep*n+(dis/2)*n)+(swiv-1)*6,2,0+(180*o),DS_BALL_S_A_PURPLE+(swiv-1),1+max(0,i)*5);
							//obj = CreateShotA1(X,(i*dis)+(keep*n+(dis/2)*n)+(swiv-1)*6,2,0+(180*o),DS_RICE_M_PURPLE+(swiv-1),1+max(0,i)*5);

						ObjShot_SetAutoDelete(obj,false);
						//if(n==0){
						turn(obj,X,o,n,keep,i,dis,swiv);
					//}
					}
				}
				wait(15.2);
			}
		}
	}
}
task turn(obj,X,o,n,keep,i,dis,swiv){
	let r=(keep+(dis/2))-i*dis;
	if(n==0){
		 r=(keep+(dis/2))-i*dis;
		ObjMove_AddPatternA2(obj,0,180/140,180*o,0,(180-180*2*o)/(r*3.1415926535897932384626433832795*(140/180)),0);
	}else{
		r=(i*dis+keep+(dis/2))-keep;
		ObjMove_AddPatternA2(obj,0,180/140,180*o,0,-(180-180*2*o)/(r*3.1415926535897932384626433832795*(140/180)),0);
	}
	//ObjShot_SetDeleteFrame(obj,100);
	wait(2+max(0,i)*5);
		if(o==0){
			while(ObjMove_GetX(obj)>X){yield;}
			//wait(2);
			ObjShot_SetDelay(obj,10);
			//if(swiv==1){
				ObjMove_AddPatternA3(obj,10,1.6,180+10-20*n+(swiv-1)*5,0,0,1.6,DS_NEEDLE_PURPLE+(swiv-1));
				ObjShot_SetAutoDelete(obj,true);
			/*}else{
				ObjShot_SetDeleteFrame(obj,10-1);
			}*/
				//Obj_Delete(obj);
			return;
		}else{
			while(ObjMove_GetX(obj)<X){yield;}
			//wait(2);
			ObjShot_SetDelay(obj,10);
			//if(swiv==1){
				ObjMove_AddPatternA3(obj,10,1.6,0-10+20*n+(swiv-1)*5,0,0,1.6,DS_NEEDLE_PURPLE+(swiv-1));
				//CreateShotA1(X,(i*dis)+(keep*n+(dis/2)*n)+(swiv-1)*5,2,0+(180*o),DS_NEEDLE_PURPLE+(swiv-1),0);
				ObjShot_SetAutoDelete(obj,true);
			/*}else{
				ObjShot_SetDeleteFrame(obj,10-1);
			}*/
				//Obj_Delete(obj);
			return;
		}
	
}



task movement{
	let count=0;
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
		
       /* let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		
        wait(240);*/
		//wait(100);
		//loop(50){
			let hold=ObjPrim_Create(OBJ_SPRITE_2D());
			let x=cos(count*20)*100+192;
			let y=sin(count*10)*30+90;
			ObjRender_SetX(hold,x);
			ObjRender_SetY(hold,y);
			ObjMove_SetDestAtFrame(objBoss,x,y,1+GetObjectDistance(objBoss,hold)/2);
			count=count+1;
			//wait(GetObjectDistance(objBoss,hold)/2);
			wait(12)
			//yield;
		//}
    }
}
task TDrawLoop {
   		//125 width	256 height
	let animFrame = 0;
	let animFrame2 = 0;
	let dir;
	let speed; 
		// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
		//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		//WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		//WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
task BMarker()
{
	//let hold=GetEnemyBossSceneObjectID();
	let path = GetCurrentScriptDirectory() ~ "system/img/Bmarker.png";
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(obj, 0.98);
		ObjPrim_SetTexture(obj, path);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 160, 183);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetScaleXYZ(obj,0.4,0.4,0);
		
	let pathb = GetCurrentScriptDirectory() ~ "system/img/Bwheel.png";
		let objb = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objb, 0.027);
		ObjPrim_SetTexture(objb, pathb);
		ObjSprite2D_SetSourceRect(objb, 0, 0, 108, 109);
		ObjSprite2D_SetDestCenter(objb);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objb,0.4,0.4,0);
		
	let pathc = GetCurrentScriptDirectory() ~ "system/img/highlight.png";
		let objc = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objc, 0.024);
		ObjPrim_SetTexture(objc, pathc);
		ObjSprite2D_SetSourceRect(objc, 0, 0, 250, 231);
		ObjSprite2D_SetDestCenter(objc);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
		ObjRender_SetBlendType(objc,BLEND_ALPHA);
		ObjRender_SetAlpha(objc,100);
		
		let count=0;
		loop{
			//hold=GetEnemyBossSceneObjectID();
			ObjRender_SetAngleXYZ(objb,0,0,ObjMove_GetY(GetPlayerObjectID)*1.4+count*1.5);
			ObjRender_SetPosition(obj,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+25, 2);
			ObjRender_SetPosition(objb,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			ObjRender_SetPosition(objc,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			
			if(ObjMove_GetX(GetPlayerObjectID)>ObjMove_GetX(objBoss)-35&&ObjMove_GetX(GetPlayerObjectID)<ObjMove_GetX(objBoss)+35){
				ObjRender_SetAlpha(objc,200);count=count+2;ObjRender_SetScaleXYZ(objc,0.8,0.8,0);
			}else{ObjRender_SetAlpha(objc,100);}
			ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
			yield;
		}
}
