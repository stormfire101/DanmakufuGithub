#TouhouDanmakufu[Single]
#ScriptVersion[3]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#Title["nonspell2"]
#Text["nonspell2"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"
let objBoss;
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let imgpath = GetCurrentScriptDirectory() ~ "./IWarnedYou.png";
let state=0;
let animFrame = 0;
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(7000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(50);
    }
    /*case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }*/
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    //ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	Stellar_Init();
		
	let dir=-1;
	//wait(120);
	loop{
		loop(2){
			wait(150);
			spirit;
			loop(2){
				coin(dir);
				dir=dir*-1;
				wait(120);
			}
		}
		wait(200);
		preassure;
		//yield;
		
	}
	
}
task spirit{
	attack;
	wait(200);
	//Stellar_Charge(objBoss,20,0.5,BLEND_ALPHA,360);
	wait(40);
	
	//(absolute((90-(150-90))-150)/num
	let hold=150;
	let num=5;
	let holdb;
	//let obj;
	ascent(o in 0..7){
		holdb=(absolute((90-(150-90))-150))/num;
		ascent(i in 0..(num)){
			shoot(num,hold,holdb,o,i);
			//shootb(num,o,i);
			//let obj=CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), -1.5,(hold-i*holdb)-rand(0,(holdb/2))+180,+0.01-(o*0.0015)-rand(0,0.001),0,DS_BALL_BS_PURPLE, 3);
		}
		num=num+o*2;
	}
	
}

task shoot(num,hold,holdb,o,i){
	let obj = CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), -1.5,(hold-i*holdb)-rand(0,(holdb/2))+180,+0.01-(o*0.0015)-rand(0,0.001),0,DS_BALL_BS_PURPLE, 10);
	wait(300);
	if(Obj_IsDeleted(objBoss) || Obj_IsDeleted(obj)){return;}
	ObjMove_SetSpeed(obj,0);
	let warn = ObjPrim_Create(OBJ_SPRITE_2D());
	
	ObjPrim_SetTexture(warn,imgpath);
        ObjSprite2D_SetSourceRect(warn, 0, 0, 62, 62); //alternatively, 0, 0, 384, 448
        ObjSprite2D_SetDestRect(warn, 0, 0, 62, 62);
        ObjRender_SetPosition(warn,ObjMove_GetX(obj),ObjMove_GetY(obj), 1); //move it to the top left corner of the screen
		ObjSprite2D_SetDestCenter(warn);
		ObjRender_SetBlendType(warn,BLEND_ALPHA);
		ObjRender_SetAlpha(warn,100);
	
	wait(110);
	if(Obj_IsDeleted(objBoss)||Obj_IsDeleted(obj)){Obj_Delete(warn);return;}
	Obj_Delete(warn);
	ObjMove_AddPatternA3(obj,0,0,0,0,0,0,DS_BALL_L_PURPLE);
	//ObjSprite2D_SetDestRect(obj, 0, 0, 62, 62);
	//if(Obj_IsDeleted(objBoss)){return;}
	wait(50);
	//if(Obj_IsDeleted(objBoss)){return;}
	Obj_Delete(obj);
	
}

function stateUp{
	if(ObjMove_GetSpeed(objBoss)!=0){
		objBossState=1;
	}else{
		objBossState=0;
	}
}
task preassure{
	ascent(i in 0..(190/7.6)/2){
		shootPress(i);
		wait(5);
	}
}
task shootPress(i){
	let diff=1;
	let hold = rand(0.2,0.6);
	let holdb =GetAngleToPlayer(objBoss);
	ascent(o in 0..5){
		CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 1.6,(holdb+6)-i*7.8+o*(4+hold)+3*(o/5)^2,DS_COIN_ORANGE+(3+3*diff),5);
		CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 1.6,(holdb-6)+i*7.8-o*(4+hold)-3*(o/5)^2,DS_COIN_YELLOW+(2.5-2.5*diff),5);
		//CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2.2,(90)-i*7.6-(o*(o-10)/2),DS_COIN_ORANGE,o*2.9);
	diff=diff*-1;
	wait(12.5-i/3.8);
	}
}
task coin(dir){
	ascent(i in 0..120/6){
		moreCoins(i,dir);
		
		wait(6);
	}
}
task moreCoins(i,dir){
	ascent(o in -1..2){
		//CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2,(hold+i*dir)+o*5*dir,DS_COIN_RED, 0);
		CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2.4,(90+60*dir)-i*6*dir+o*5*dir,DS_COIN_ORANGE, 7.7);
		CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2.4,(90+60*(-dir))-i*6*(-dir)+o*5*(-dir),DS_COIN_YELLOW, 0);
		if(Obj_IsDeleted(objBoss)){return;}
		//CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2,((150-hold)-i*dir)-o*5*dir,DS_COIN_YELLOW, 0);
		//CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 2,i*dir,DS_COIN_YELLOW, 3);
		wait(8);
		
	}
}

task scythe(size,dir){
	let obj;
	ascent(h in 0..size){
		ascent(i in 0..(size-h)){
			//let obj = CreateShotA1(ObjMove_GetX(objBoss)+(i*20+h*10)-((size*20)/2.5),ObjMove_GetY(objBoss)+(h*20)-((size*20)/2.5),0,90,DS_SCALE_A_RED,0);
			
		}
	}
	
}
 
task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
		let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task attack{
	state=1;
	animFrame=0;
}

task TDrawLoop {		
		//125 width	256 height
		
let animFrame2 = 0;

let dir;
	let speed; 

	// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
	//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(state==0){
			if(speed == 0){ 
				ObjRender_SetAngleXYZ(objBoss,0,0,0);
				ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
				if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
				if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
				if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
				//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
				animFrame2 = 0;
			}
			else if(cos(dir) < 0){ 
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
				if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
				if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
			}
			else if(cos(dir) > 0){ 
			//WriteLog(0);
				ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
				if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
				if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
			}
		//animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		
		}else if(state==1){
			WriteLog(1000);
			if(animFrame < 10) { ObjSprite2D_SetSourceRect(objBoss,128*5,0,128*6,128);}
			if(animFrame >= 10 && animFrame < 240) { ObjSprite2D_SetSourceRect(objBoss,128*5,128,128*6,128*2);}
			if(animFrame >= 240 && animFrame < 270) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*2,128*6,128*3);}
			if(animFrame >= 270 && animFrame < 300) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*3,128*6,128*4);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}//290
			if(animFrame > 120*2+60) { animFrame = 0;state=0; }
		}
		animFrame++;
		yield;
	}
	
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
function evenOdd(){
	let hold=rand(0,2);
	if(hold<1){
		return -1;
	}else{
		return 1
	}
}