#TouhouDanmakufu[Single]
#System["C:/Users/Matt/Documents/th_dnh_ph3/script/firstBoss/system/New_System.txt"]
#Background["script/firstBoss/system/Default_Background_IceMountain.txt"]
#ScriptVersion[3]
#Title["spell3"]
#Text["spell3"]
#BGM["./necrofantasia.ogg"]
#include "script/default_system/Default_ShotConst.txt"
#include "script/Stellar FX/Stellar.dnh"

let objBoss;
//let imgpath = GetCurrentScriptDirectory() ~ "./New_Background.png";
let objScene=GetEnemyBossSceneObjectID();
let imgBoss = GetCurrentScriptDirectory ~ "./dot_komachi.png";
let objBossState=0;
let state=0;
let animFrame = 0;
let total=0;
let totalf=0;
let imgpath = GetCurrentScriptDirectory() ~ "./IWarnedYou.png";
//let pos = ObjPrim_Create(OBJ_SPRITE_2D());
let xwidth=0;
//18,3.5
@Event{
    alternative(GetEventType())
    case(EV_REQUEST_LIFE){
        SetScriptResult(7000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
}
@Initialize{
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX, 60, 60);
    ObjEnemyBossScene_StartSpell(objScene);
    TDrawLoop;
    TFinalize;
    MainTask;
	BMarker;
}
@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32); 
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}
task MainTask{
	//SetStgFrame(32,16, 416, 464, 20, 80);
      wait(120);//100 
		Stellar_Init();
		walls;
		wait(30);
		coins;
		wait(5);
		spirits;
		
}
task coins{
	let hold=0;
	let obj;
	let swiv=0;
	loop{
		ascent(o in 0..2){
			ascent(h in 0..5){
				ascent(i in 0..3){
					if((i==1 && (h>0&&h<4)) || (i==0 && h==1) || (i==2 && h==3)){
						let obj = CreateShotA1(GetStgFrameWidth*o+xwidth*(1-2*o),0+i*33,2,0,DS_COIN_YELLOW-1,h*5);
						ObjRender_SetBlendType(obj,BLEND_ALPHA);
						curveb(obj,o,1-2*o,1);
					}else{
						let obj = CreateShotA1(GetStgFrameWidth*o+xwidth*(1-2*o),0+i*33,2,0,DS_COIN_YELLOW,h*5);
						ObjRender_SetBlendType(obj,BLEND_ALPHA);
						curveb(obj,o,1-2*o,0);
					}
					//let obj = CreateShotA1(GetStgFrameWidth*o+xwidth*(1-2*o),0+i*28,2,0,DS_COIN_YELLOW-1+(i-1)^2,h*5);
				}
				wait(11);
			}
		wait(8);
		}
	wait(8);
	}
}
function getDistance(A,c){
	return((sin(90)*c)/sin(180-A-90));
}
task curveb(obj,o,dir,f){
	
	ObjRender_SetAlpha(obj,255+45*(o-1));
	let t=140*2;
	let a=30;
	
	let r=(getDistance(a,GetStgFrameWidth-xwidth*2)/2);
	//let r=((GetStgFrameWidth-xwidth*2));
	let v=((r*2*3.1415926535897932384626433832795))/t;
	//let w=v/(r);
	let w=180/t;
	WriteLog(w);
	//let w=(r*2*3.1415926535897932384626433832795);
	ObjMove_AddPatternA2(obj,0,v,0+180*o,0,w*dir,0);
	//ObjMove_AddPatternA2(obj,0,v,90+(a-90)*dir,0,0,0);
	while(ObjMove_GetY(obj)<GetStgFrameHeight){
		if(ObjMove_GetX(obj)<xwidth && dir==-1){
		dir=dir*-1;
		ObjMove_AddPatternA2(obj,0,v,0,0,w,0);
		ObjRender_SetAlpha(obj,255-45);
		//wait(5);
		}else if(ObjMove_GetX(obj)>GetStgFrameWidth-xwidth){
			dir=dir*-1;
		ObjMove_AddPatternA2(obj,0,v,180,0,-w,0);
		ObjRender_SetAlpha(obj,255+55);
		}
		yield;
	}
	Obj_Delete(obj);
}	

task walls{//SetPlayerClip
let hold=0;
	let imgpath = GetCurrentScriptDirectory() ~ "./New_Background.png";
	let left = ObjPrim_Create(OBJ_SPRITE_2D());
	ObjPrim_SetTexture(left,imgpath);
        ObjSprite2D_SetSourceRect(left, 32,16 ,0 , 464); //alternatively, 0, 0, 384, 448
        ObjSprite2D_SetDestRect(left, 0, 0, 0, 448);
       //ObjRender_SetPosition(left,0,0, 150); //move it to the top left corner of the screen
	   	Obj_SetRenderPriority(left, 0.80);
		
	let right = ObjPrim_Create(OBJ_SPRITE_2D());
	ObjPrim_SetTexture(right,imgpath);
        ObjSprite2D_SetSourceRect(right, 416,16 ,416 , 464); //alternatively, 0, 0, 384, 448
        ObjSprite2D_SetDestRect(right, 384, 0, 384, 448);
       //ObjRender_SetPosition(left,0,0, 150); //move it to the top left corner of the screen
	   	Obj_SetRenderPriority(right, 0.80);	

		ascent(i in 0..20){//(i(i-740))/-740 ///(GetStgFrameWidth-GetStgFrameLeft)/2-70
			hold=((GetStgFrameWidth-GetStgFrameLeft)/2-70)/(20-i);
			ObjSprite2D_SetSourceRect(left, GetStgFrameLeft,GetStgFrameTop,GetStgFrameLeft+hold , GetStgFrameHeight+GetStgFrameTop); //alternatively, 0, 0, 384, 448
			ObjSprite2D_SetDestRect(left, 0, 0, hold, GetStgFrameHeight);
			//ObjMove_SetX(GetPlayerObjectID(),max(ObjMove_GetX(GetPlayerObjectID()),(i*(i-740))/(-740)+5));
			
			ObjSprite2D_SetSourceRect(right, GetStgFrameWidth+GetStgFrameLeft-hold,GetStgFrameTop ,GetStgFrameWidth +GetStgFrameLeft, GetStgFrameHeight+GetStgFrameTop); //alternatively, 0, 0, 384, 448
			ObjSprite2D_SetDestRect(right, GetStgFrameWidth-hold, 0,GetStgFrameWidth, 448);
			SetPlayerClip(hold,0,GetStgFrameWidth-hold,GetStgFrameHeight);
			yield;
			ObjMove_SetX(GetPlayerObjectID(),min(	max(ObjMove_GetX(GetPlayerObjectID()),hold+5)	,GetStgFrameWidth-hold-5)	);
			xwidth=((GetStgFrameWidth-GetStgFrameLeft)/2-70)/(20-i);
		}
		xwidth=((GetStgFrameWidth-GetStgFrameLeft)/2-70)/(1);
		loop{
			ObjMove_SetX(GetPlayerObjectID(),min(	max(ObjMove_GetX(GetPlayerObjectID()),hold+5)	,GetStgFrameWidth-hold-5)	);
			yield;
		}
		//SetPlayerClip(100,0,200,GetStgFrameHeight);
}

task spirits{
	let count=0+rand(0,1);
	let mid=(GetStgFrameWidth-xwidth*2);
	loop{
		let obj=CreateShotA1((mid/2-30)*cos(count*117)+mid,0,1.5,90,DS_BALL_M_PURPLE,20);
		//let obj=CreateLooseLaserA1((mid/2-50)*cos(count*77)+mid,0,1.5,90,50,50,DS_BALL_L_PURPLE,20);
		Stellar_Emitter(obj,5000,0.8,0.2,5,5,0.1,7,0.1,2,627,300,150);
		spirit(obj);
		//totalf++;
		wait(70);count++;
	}
}
task spirit(obja){
	snake(obja);
	let t=30;
	let s=1.4;
	warn(obja,s);	
	while(GetObjectDistance(obja,GetPlayerObjectID)>25*s-3&&GetStgFrameHeight>ObjMove_GetY(obja)+25*s-10){yield;}
		let obj=CreateShotA1(ObjMove_GetX(obja),ObjMove_GetY(obja),1.5,90,DS_BALL_M_PURPLE,20);
		Obj_Delete(obja);
		ObjShot_SetGraphic(obj,DS_BALL_L_PURPLE);
		ObjMove_SetSpeed(obj,0);//loop{
		ObjRender_SetBlendType(obj,BLEND_ALPHA);
		explode(obj);
		ascent(i in 0..t){
			ObjRender_SetAlpha(obj,200-t*3+i*3);
			ObjRender_SetScaleXYZ(obj,0.5+(1.3/t)*i,0.5+(1.3/t)*i,0);
			ObjShot_SetIntersectionCircleA1(obj,25*0.5+(1.3/t)*i);
			yield;
		}
		hitbox(obj,s);
	total++;
	wait(50);
	ObjShot_FadeDelete(obj);

}
function explode(obj){
	ascent(i in 0..5){
		CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),1.9,GetAngleToPlayer(obj)+360/5*i,DS_SCALE_PURPLE,20);
		//dir=dir*-1;
	}
	ascent(i in 0..5){
		ascent(n in 0..2){
			CreateShotA1(ObjMove_GetX(obj),ObjMove_GetY(obj),1.7,GetAngleToPlayer(obj)+(360/5/2)+360/5*i-10+n*20,DS_SCALE_BLUE,25);
		}
	}
}
task warn(obj,s){
	let imgpath = GetCurrentScriptDirectory() ~ "./IWarnedYou.png";
	let warn = ObjPrim_Create(OBJ_SPRITE_2D());
	
	ObjPrim_SetTexture(warn,imgpath);
		ObjSprite2D_SetSourceRect(warn, 0, 0, 62, 62); //alternatively, 0, 0, 384, 448
		ObjSprite2D_SetDestRect(warn, 0, 0, 25*s-3, 25*s-3);
		//ObjRender_SetAngleXYZ(warn,25*s-3,25*s-3,0);
		ObjRender_SetPosition(warn,ObjMove_GetX(obj),ObjMove_GetY(obj), 1); //move it to the top left corner of the screen
		ObjSprite2D_SetDestCenter(warn);
		ObjRender_SetBlendType(warn,BLEND_ALPHA);
		ObjRender_SetAlpha(warn,120);
	while(!Obj_IsDeleted(obj)){
		ObjRender_SetPosition(warn,ObjMove_GetX(obj),ObjMove_GetY(obj), 1);
		yield;
	}
	Obj_Delete(warn);
}
function snake(obj){
	let aim=GetAngleToPlayer(obj);
	let wvel = 1.5;
	ascent(i in 0..8){
		//hold=
		ObjMove_AddPatternA2(obj, i*34, 2.2, aim, 0, wvel, 1.5);
		//ObjMove_AddPatternA3(obj,10,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE,NO_CHANGE);
		wvel*=-1;
	}
}
task hitbox(obj,s){
	while(!Obj_IsDeleted(obj)){
		ObjShot_SetIntersectionCircleA1(obj,25*s);
		yield;
	}
}
//////////////////////////////////////////////////






function points{
	
}
task sycthe{
	CreateStraightLaserA1(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),90,GetScreenHeight()+20,50,50,DS_BEAM_PURPLE,50);
	
}




function simp(i){
	if(i>=360){
		return (i-360);
	}else if(i<0){
		return (i+360);
	}else{
		return i;
	}
}

task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        let x=rand(GetCenterX + 90, GetCenterX - 90);
		let y= rand(GetCenterY - 60, GetCenterY - 120);
		let hold=ObjPrim_Create(OBJ_SPRITE_2D());
		ObjRender_SetX(hold,x);
        ObjRender_SetY(hold,y);
		ObjMove_SetDestAtFrame(objBoss,x,y,GetObjectDistance(objBoss,hold)/rand(1.5,2));
        wait(240);
    }
}
task TDrawLoop {
   		//125 width	256 height
	
	let animFrame2 = 0;
	let dir;
	let speed; 
		// texture the boss, set centre as true centre.
	ObjPrim_SetTexture(objBoss,imgBoss);
	ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
	ObjSprite2D_SetDestCenter(objBoss);
		//ObjRender_SetScaleXYZ(objBoss,1.0,1.0,0);
	
	while(!Obj_IsDeleted(objBoss)) {
	
		// update boss speed/dir locally
		dir = ObjMove_GetAngle(objBoss);
		speed = ObjMove_GetSpeed(objBoss);
		
		// animation handling
		//alternative(objBossState)
		if(state==0){
		if(speed == 0){ 
		//alternative(objBossState)
		//case(0){
			ObjRender_SetAngleXYZ(objBoss,0,0,0);
			ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,0,0,128,128);}
			if(animFrame >= 15 && animFrame < 30) { ObjSprite2D_SetSourceRect(objBoss,0,128,128,128*2);}
			if(animFrame >= 30 && animFrame < 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*2,128,128*3);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}
			animFrame2 = 0;
		//}
		}
		else if(cos(dir) < 0){ 
		//WriteLog(1);
			//ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,64,192,128); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,64,256,128); }
		}
		else if(cos(dir) > 0){ 
		//WriteLog(0);
			ObjRender_SetAngleXYZ(objBoss,0,180,0);	// flip vertical
			if(animFrame2 < 15) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*3,128*4,128*4); }
			if(animFrame2 >= 15 && animFrame2 <= 45) { ObjSprite2D_SetSourceRect(objBoss,128*3,128*4,128*4,128*5); }
			//if(animFrame2 >= 30 && animFrame2 < 45) { ObjSprite2D_SetSourceRect(objBoss,128,128,192,192); }
			//if(animFrame2 >= 45) { ObjSprite2D_SetSourceRect(objBoss,192,128,256,192); }  
		}
		if(animFrame > 60) { animFrame = 0; }	// reset animFrame when it is higher than 60.
		}else{
			if(animFrame < 15) { ObjSprite2D_SetSourceRect(objBoss,128*5,0,128*6,128);}
			if(animFrame >= 15 && animFrame < 50) { ObjSprite2D_SetSourceRect(objBoss,128*5,128,128*6,128*2);}
			if(animFrame >= 50 && animFrame < 65) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*2,128*6,128*3);}
			if(animFrame >= 65 && animFrame < 120) { ObjSprite2D_SetSourceRect(objBoss,128*5,128*3,128*6,128*4);}
			//if(animFrame >= 45) { ObjSprite2D_SetSourceRect(objBoss,0,128*3,128,128*4); WriteLog(4);}//290
			if(animFrame > 120) { animFrame = 0;state=0; }
		}
		animFrame++;		// count animFrame. (++ is +1)
		animFrame2+=2;		// count animFrame2.
		
		yield;
	}
}
task TFinalize {
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
    }
	wait(5);
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}
function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}
task BMarker()
{
	//let hold=GetEnemyBossSceneObjectID();
	let path = GetCurrentScriptDirectory() ~ "system/img/Bmarker.png";
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(obj, 0.98);
		ObjPrim_SetTexture(obj, path);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 160, 183);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetScaleXYZ(obj,0.4,0.4,0);
		
	let pathb = GetCurrentScriptDirectory() ~ "system/img/Bwheel.png";
		let objb = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objb, 0.027);
		ObjPrim_SetTexture(objb, pathb);
		ObjSprite2D_SetSourceRect(objb, 0, 0, 108, 109);
		ObjSprite2D_SetDestCenter(objb);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objb,0.4,0.4,0);
		
	let pathc = GetCurrentScriptDirectory() ~ "system/img/highlight.png";
		let objc = ObjPrim_Create(OBJ_SPRITE_2D);
		//ObjRender_SetBlendType(obj, BLEND_ALPHA);
		Obj_SetRenderPriority(objc, 0.024);
		ObjPrim_SetTexture(objc, pathc);
		ObjSprite2D_SetSourceRect(objc, 0, 0, 250, 231);
		ObjSprite2D_SetDestCenter(objc);
		//ObjSprite2D_SetDestRect(objb, 0, 0, 108/(160/67), 109/(160/67));		
		//ObjRender_SetScaleXYZ(objb,67/108,67/109,0);
		ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
		ObjRender_SetBlendType(objc,BLEND_ALPHA);
		ObjRender_SetAlpha(objc,100);
		
		let count=0;
		loop{
			//hold=GetEnemyBossSceneObjectID();
			ObjRender_SetAngleXYZ(objb,0,0,ObjMove_GetY(GetPlayerObjectID)*1.4+count*1.5);
			ObjRender_SetPosition(obj,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+25, 2);
			ObjRender_SetPosition(objb,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			ObjRender_SetPosition(objc,ObjMove_GetX(objBoss)+(160*0.4)/2,GetStgFrameHeight+13, 2);
			
			if(ObjMove_GetX(GetPlayerObjectID)>ObjMove_GetX(objBoss)-35&&ObjMove_GetX(GetPlayerObjectID)<ObjMove_GetX(objBoss)+35){
				ObjRender_SetAlpha(objc,200);count=count+2;ObjRender_SetScaleXYZ(objc,0.8,0.8,0);
			}else{ObjRender_SetAlpha(objc,100);}
			ObjRender_SetScaleXYZ(objc,0.4,0.4,0);
			yield;
		}
}
task check(obj){
	while(!Obj_IsDeleted(obj)){
		if(ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID,INFO_CURRENT_LIFE)<1){
		//yield;
			Obj_Delete(obj);
		}
	
		yield;
	}
}